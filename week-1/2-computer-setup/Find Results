Searching 178 files for "github" (case sensitive)

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/README.md:
   10
   11  ## Unit Requirements
   12: - [Peer-Pair program](https://github.com/Devbootcamp/phase-0-handbook/blob/master/peer-pairing-sessions.md) at least 4 times this unit. Read about [pairing](https://github.com/Devbootcamp/phase-0-handbook/blob/master/pairing-in-phase-0.md).
   13: - [Submit feedback](https://socrates.devbootcamp.com/feedback/new) for all pairing sessions. (You should submit at least 4 for peer sessions and 2 for [GPS 1.1 and 1.2](https://github.com/Devbootcamp/phase-0-handbook/blob/master/guided-pairing-sessions.md))
   14  - [Rate Feedback](https://socrates.devbootcamp.com/feedback) at least 20 pieces of other people's feedback.
   15

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/10-technical-blog.md:
   29  **Using ONLY your command line**
   30
   31: - Navigate to your [USERNAME].github.io repository
   32  - Make a directory called `blog`
   33  - In the `blog` directory, add a new file called `t1-git-blog.md`
   ..
   35  - Add and commit your changes with a good commit message
   36  - Push your changes
   37: - Navigate to your [USERNAME].github.io/blog/t1-git-blog.md
   38
   39  If you went through every step, you should see the blog template live on your site!
   ..
   56  Next week you will make this post much prettier - but for now it's important that you get the content up there.
   57
   58: Double check you can see your updated content on [USERNAME].github.io/blog/t1-git-blog.md.
   59
   60  ## Release 5: Promote

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/11-cultural-blog.md:
   16  **Using ONLY your command line**
   17
   18: - Navigate to your `[USERNAME].github.io/blog` directory
   19  - Add a new file called `c1-chefs-kitchen.md`
   20  - Copy the markdown template from [blog-template.md](blog-template.md) (in this repository) into your `c1-chefs-kitchen.md` file.
   ..
   33  ## Release 3: Publish
   34
   35: Don't forget to add, commit, and push your changes to make them live on your github.io site. Double-check that you can see your page when you visit:
   36
   37: [USERNAME].github.io/blog/c1-chefs-kitchen.md
   38
   39  ## Release 4: Promote

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/12-self-introduction.md:
   15  ## Release 0: Read someone else's reflections
   16
   17: Log on to [Socrates](https://socrates.devbootcamp.com/) and look at your cohort. Find the person after you in the cohort list. Click on their name. On their profile, you should see their GitHub username. Go to their repository and read their reflections for each challenge. The URL should be https://github.com/[THEIR-USERNAME]/phase-0-unit-1. If it gives you a 404 error, try writing the URL directly. If you still get an error, send them an email and ask how they are doing.
   18
   19  Once you've read them, or while reading through them, consider what you learned by reading another person's reflections. Keep it in mind for your introduction email!
   ..
   29  - What you learned by reading [NAME]'s reflection
   30  - When the best time for you to pair is
   31: - Links to your 1) forked `phase-0-unit-1` repository and your [USERNAME].github.io site
   32
   33  Send your email!
   ..
   39  After you start seeing other student's self introductions, select another person's repository to view (they should have included a link in their email).
   40
   41: Leave feedback for the second person using the "Issues" feature on GitHub. Use the ["How to Create an Issue"](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/review.md) instructions for help.
   42
   43  ## Release 4: Check in with your accountability group

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/2-computer-setup/linux-instructions.md:
   59
   60  ## Release 4: Set up your Path
   61: First you need to clone this github repository into your computer and install the files. Type each line separately:
   62
   63  ```shell
   64: git clone https://github.com/supertopher/dotfiles.git
   65  cd dotfiles
   66  ./install
   ..
   93
   94  ## Release 7: Set up Sublime
   95: Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/text-editor-setup.md) in the Phase 0 Handbook to make Sublime your default text editor.
   96
   97  ## Release 8: Install Node

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/2-computer-setup/mac-instructions.md:
   50
   51  ```shell
   52: ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
   53  ```
   54  It will prompt you for your password - so be ready to type it in.
   55
   56  ## Release 4: Set up your Path
   57: First you need to clone this github repository into your computer and install the files. Type each line separately:
   58
   59  ```shell
   60: git clone https://github.com/supertopher/dotfiles.git
   61  cd dotfiles
   62  ./install
   ..
   80
   81  ## Release 6: Set up Sublime
   82: Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/text-editor-setup.md) in the Phase 0 Handbook to make Sublime your default text editor.
   83
   84  ## Release 7: Install Rbenv

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/2-computer-setup/windows-instructions.md:
   28  ## Release 0: Download Sublime Text
   29
   30: Follow these instructions [sublime install and configure](https://github.com/Devbootcamp/phase-0-handbook/blob/master/text-editor-setup.md)
   31
   32  If you have dont this correctly, you should be able to open files from the command prompt using `subl "filename"` now.
   ..
  108  Now we can configure some of the git settings.
  109
  110: first thing is to set your username and email you have related to your github account
  111
  112  ```shell
  ...
  135
  136  ## Release 7: Set up Sublime
  137: Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/text-editor-setup.md) in the Phase 0 Handbook to make Sublime your default text editor.
  138
  139  ## Release 8: Install Postgresql

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/4-github-intro/README.md:
   29    2. The challenges are numbered in the order needed to complete them in the section where directories and files are displayed (above the README).
   30
   31: Don't overthink the web version of github too much. It's a very similar structure to a computer's file structure you already know.
   32
   33  #### Branches
   ..
   76  Confused about the difference between git and GitHub? Try one of these articles:
   77
   78: - [Git vs. GitHub for Dummies](http://stephaniehoh.github.io/blog/2013/10/07/git-vs-github-for-dummies/)
   79: - [Is Git the same as GitHub?](http://www.jahya.net/blog/?2013-05-git-vs-github)
   80
   81

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/5-fork-clone/fork-clone-steps.md:
    2
    3  ## Username
    4: I'm sure you've chosen an excellent and memorable username for GitHub, so don't forget it! When you see "[USERNAME]" in this guide, replace it with your username. For example, my username is "mbtomori". So "github.com/**[USERNAME]**" becomes "github.com/**mbtomori**".
    5
    6  ## Forking
    .
   32  Now you'll want to bring the repository to our computer. There is a series of commands to do this.
   33
   34: First, open your terminal and check where you are (type `pwd`). You NEVER want to clone a repository into another local github repository, so **always** make sure you are in the correct directory, like your Desktop or a phase-0 folder.
   35
   36  The first step is to get the URL of your FORKED repo (Don't clone Devbootcamp's version of the repo!). This is found here:
   ..
   44  ![terminal-clone](../imgs/terminal-clone.png)
   45
   46: If you are using HTTPS, you will be prompted to enter your github username and password. (You won't be able to see what you type, when you finish entering your username, press enter. You will then be prompted to enter your password -- press enter when you're finished).
   47
   48  Now you should see some stuff execute. It looks like you're hacking a mainframe from the 90s!

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/5-fork-clone/README.md:
   36  ## Release 3: Clone
   37
   38: Now you have your own fork of the curriculum on github.com just waiting to be modified. It's time to bring it to your computer so you can add your work. Clone your **forked** repo using the instructions from the video.
   39
   40: Delete your local copy (using the command line) and clone it again. Get familiar with the commands and the steps to get a file from github to your computer.
   41
   42  Now that you have your own fork and a local copy of the files to work with, you can share your knowledge with the world. Find someone/thing that will listen to you for 10 minutes and teach them how to fork and clone a repo. Wouldn't it be great if your dog could do this for you?
   ..
   45  Now you can finally add your reflection to the challenge itself! Reflect on your learning in this challenge by editing the [my_reflection.md](my_reflection.md) file in the [5-fork-clone](./) folder (the folder you are in). These files are written in [markdown](http://daringfireball.net/projects/markdown/syntax), which is a text-to-HTML conversion tool. It's so easy, you just need to type as you normally would to add your reflections.
   46
   47: You can complete this challenge reflection on github.com. Click on the [my_reflection.md](my_reflection.md) file in this folder. There should be a button to edit (it looks like a pencil) at the top. Click it. You'll see questions from the first challenge as well as this one. Add your reflection in markdown and write a commit message under "Commit changes" to describe the changes you made. Once you type something there, you will want to click the "commit changes" button. **NOTE: It will not let you commit changes without a commit message.**
   48
   49  ![Editing Reflection](../imgs/adding-reflection.jpg)
   50
   51: Once you press "commit changes," your new file should be automatically visible on your www.github.com/[USERNAME]/phase-0-unit-1 directory.
   52
   53  After you learn how to edit files locally and push your changes (in the next challenge), you'll want to read and edit all files on your local `phase-0-unit-1` repository using Sublime--more on that later.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/6-tracking-changes/README.md:
   26  Because commits are 'save points', it is important to start getting in the habit of writing good commit messages so you know what each commit includes. Here is [Tim Pope's style guide](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html) for commits. There's a bunch of advanced git talk here, so just focus on the first part of the post.
   27
   28: You can type your commit messages in your terminal with `git commit -m "message goes here between the quotes"` or you can use the verbose commit message to give yourself some room `git commit -v` will open your default editor according to git (learn how to change it [here](https://help.github.com/articles/associating-text-editors-with-git) follow instructions for sublime). After you write your message, save and close the file. Your commit will be recorded.
   29
   30  You can check the commit history of a repository in the command line by typing `git log` and scroll using the up and down arrows. Exit using `q`. How would you score our git commit messages? Would you know where to look in each message to find what files were changed?

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/7-set-remotes/README.md:
   28
   29  ```shell
   30: origin  https://github.com/[USERNAME]/phase-0-unit-1.git (fetch)
   31: origin  https://github.com/[USERNAME]/phase-0-unit-1.git (push)
   32: upstream  https://github.com/Devbootcamp/phase-0-unit-1.git (fetch)
   33: upstream  https://github.com/Devbootcamp/phase-0-unit-1.git (push)
   34  ```
   35
   ..
   57   -->
   58  ## Reflect
   59: In the [my_reflection.md](my_reflection.md) file, answer the questions. Then go through the process of adding your changes, committing, and pushing. You should see your answers live on github!
   60

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/8-new-repo/README.md:
   10  ## Summary
   11
   12: Up to this point, you have been working with existing repositories. In this challenge, you'll be creating your own repository that will host your very own website! You'll be using a GitHub repository and [GitHub Pages](http://pages.github.com/) to set it up.
   13
   14  ## Releases
   ..
   16  ## Release 0: Create a website repository
   17
   18: 1.**Create a [new repository](https://github.com/new)**<br /><br />This will take you to the new repository form.
   19
   20: ![New repo form](../imgs/github-repo-1.jpg)
   21
   22  2. **Fill out the new repository form.**
   23:  - You *must, must, must* name your repository **[USERNAME].github.io**.Your repository should be *public*.
   24   - Check "Initialize this project with a README" and add an MIT license.
   25
   26:  ![New repo form](../imgs/github-repo-2.jpg)
   27
   28:  I'm gonna say it again: You *must, must, must* name your repository **[USERNAME].github.io**. If you have trouble, double check you spelled it correctly.
   29
   30  3. Click on the **"Create Repository"** button
   ..
   36  **Do a celebration dance!** <br />:dancers: :tada: :dancer:
   37
   38: ![You have a repo](../imgs/github-repo3.jpg)
   39
   40  ## Release 1: Clone the repository
   ..
   66
   67  - **Open a new file in Sublime**
   68: - Save the file as `index.html` in the **[USERNAME].github.io directory**.
   69
   70  ![Sublime save](../imgs/sublime-save.jpg)
   ..
   84  ## Release 4: Commit and Push
   85
   86: Using your github skills, add the file to the stage, commit your changes, and push it to GitHub.
   87
   88: After your push is done, your remote repo which lives on github.com will be updated.
   89: Go to **http://[USERNAME].github.io** to see your HTML page live!
   90
   91  *NOTE: It can sometimes take up to 15 minutes to update the site after creating your repo, so if you run into a 404 error, be patient and check again later.*
   92
   93: ![GitHub commit](../imgs/github-page1.jpg)
   94
   95  You can also see the new index.html file in your GitHub repository!
   96
   97: ![GitHub commit](../imgs/github-page2.jpg)
   98
   99  #### [AMAZING!](http://www.youtube.com/watch?v=ewfIvKbuRUg)

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/blog-template.md:
    1  <!-- This template is in markdown, not html, so
    2    it will not render beautifully when you copy and
    3:   paste it into your github.io site, but it will at
    4    least be published. Next week you'll be creating a
    5    blog template using HTML and CSS and you'll be able

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/BONUS-Challenges/web-basics/README.md:
    8
    9  ## Summary
   10: So far, you've learned a bit about git and github, and are hopefully getting comfortable navigating your command line and making basic changes to files. You'll be getting a lot of practice with that in the coming weeks. We did not cover, however, any of the background knowledge that will be vital to understanding web applications. The information below includes vocabulary you'll want to know early in your career as a web developer. You may forget some of this now, but it's good to get some exposure to these concepts early.
   11
   12  ## Releases

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/README.md:
    1  # Week 1: Git, GitHub, and the Command Line
    2
    3: **Welcome to Phase 0!** We hope you are excited to further your knowledge and begin integrating into the developer and DBC community. Please make sure you've completed the [Phase 0 prerequisites](https://github.com/Devbootcamp/phase-0-handbook/blob/master/phase-0-prerequisites.md) **before** getting started with the weekly challenges.
    4
    5  Please keep track of how much time you spend on the required sections of Phase 0 challenges. We'll ask you for this information in your weekly submission forms to gauge whether we are giving too much, the right amount, or not enough work each week.
    .
   12  #### 2. [Computer Setup](2-computer-setup)
   13  #### 3. [Think about time](3-think-about-time)
   14: #### 4. [GitHub Intro](4-github-intro)
   15  #### 5. [Forking and Cloning](5-fork-clone)
   16  #### 6. [Tracking Changes](6-tracking-changes)

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/11-gps1-1/README.md:
   39  What is the difference between fetch/merge and pull?
   40
   41: Make a new branch, we will make some changes to awesome_page.md. Show off some of your [markdown](http://daringfireball.net/projects/markdown/syntax) skills. Make something **bold**, *italic*, `some sort of code block` and a [link](http://daringfireball.net/projects/markdown/syntax). Add and commit your changes for awesome_page.md, push your branch to github.
   42
   43  Make a pull request like last time. The navigator should review the diff of the request and merge it. You will be using this work flow all the time as a developer!

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/12-BONUS-challenges/intermediate-html-css/README.md:
   21
   22  ## Release 1: Apply
   23: Download these [practice files](http://girldevelopit.github.io/gdi-core-intermediate-html-css/class1.zip). Move the unzipped files into this (4-intermediate-html-css) directory. Do the following exercises using the files in the "practice" folder. Save all files in the practice folder (which should now be in your repository). After you are done, compare your work with the files in the "completed" folder.
   24
   25  - Add reset.css to your index.html file. What happens?

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/12-BONUS-challenges/responsive-design/README.md:
   68
   69  ## Release 4: Commit and push your changes
   70: This site should be initially kept in your phase-0-unit-1 repository, but we also want you to make it live on your github.io site.
   71
   72  ## Release 5: Publish
   73: Using the terminal, practice copying the html and css sheets into a new folder in your [USERNAME].github.io site. Commit and push your changes to your github.io site. Double check that everything is displaying  properly. Then add a link on the index of your site to make sure people can learn from your example!
   74
   75  ## Helpful Resources

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/2-site-planning/README.md:
   33  You'll definitely want to include:
   34
   35:  - Links to your social networks (Twitter, facebook, linked-in, quora, github etc. Basically anything from Socrates except for Tumblr, unless you have a tumblr blog you want to add as well)
   36    - Your picture
   37    - Your contact information

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/3-wireframing/README.md:
   37  ## Release 3: Wireframe your site's index
   38
   39: Now consider how you want the index of your webpage to look. The index is the landing page of your [USERNAME].github.io site, so you'll want it be well thought-out.
   40
   41  You should have a header,footer, and navigation bar on your site.
   ..
   43  You will be using this site to promote yourself when you finish Dev Bootcamp, so make sure it has a spot for the following:
   44
   45:   - Links to your social networks (Twitter, facebook, linked-in, quora, github etc. Basically anything from Socrates except for Tumblr, unless you have a tumblr blog you want to add)
   46    - Your picture
   47    - Your contact information

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/4-beginning-html/README.md:
   45
   46  ## Release 4: Publish
   47: Commit your changes for each file in this challenge, and push your changes to github.
   48
   49  ## Additional Resources:

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/6-blog-template/README.md:
   17  ## Release 0: Wireframe to HTML
   18
   19: In the blog directory on your [USERNAME].github.io site, create a new file called "blog-template.html."
   20
   21  With your partner, compare the two wireframes you made in [3-wireframing](../3-wireframing) challenge. Decide which one you want to use as a reference, or decide to combine the best parts into one.
   ..
   27  ## Release 1: Apply CSS
   28
   29: In the main directory for your [USERNAME].github.io site, create a "stylesheets" directory. In that directory, create a "blog-stylesheet.css" Link to that stylesheet in your blog-template.html.
   30
   31  Use CSS to position and format the content of your blog. Once you have it displayed as you want it, move on to the next release.
   ..
   53  Now that you've made your template, you're ready to use it in the blog assignments. Add your changes to the stage, commit, and push them.
   54
   55: Now go to [USERNAME].github.io/blog/t1-git-blog.html and [USERNAME].github.io/blog/c1-chefs-kitchen.html. Are your files displaying as you expected them to? If not, can you find out what the issue is?
   56
   57  ## Release 5: Reflect

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/7-chrome-devtools/README.md:
   47  ## Release 3: Reflect
   48
   49: Go to your [Reflection file](my_reflection.md) to write your reflection - include answers to the questions in the file in addition to the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md).
   50
   51  ## Release 4: Commit and Push

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/8-your-website-solo-challenge/README.md:
    3  # U1.W2: Your Website (Solo Challenge)
    4
    5: **THIS IS YOUR SOLO CHALLENGE FOR WEEK 2.** Please reference the [Phase 0 Handbook](https://github.com/Devbootcamp/phase-0-handbook/) for more details as to what this entails.
    6
    7  ## Learning Competencies
    .
   13  ## Summary
   14
   15: In this challenge, you will make your [USERNAME].github.io site using the principles of design, site map, wireframe, and HTML and CSS you've learned this far. You may not use Bootstrap or any other design framework for your site.
   16
   17  Get creative. Have fun. But be conscious of time. This site will be a work in progress, so you should timebox how much time you want to spend on each part. You will be able to make improvements each week or unit if you dedicate the time to it. Make an MVP (Minimum Viable Product) for this version. Designing and building a site can take a **LONG TIME**, so just get your site "good enough" for your MVP. You can always make it better later!
   ..
   27  This page is required for you to create:
   28
   29: blog/index.html (Note: this is different than the index.html already in your [USERNAME].github.io/index.html). This is where the links to blog posts will live.
   30
   31  You do not have to create them during this challenge, but you should decide what will be in your MVP (Minimum Viable Product) and what you want to add in the future. This will change, but it's a good idea to have an end goal as well.
   ..
   62
   63  #### Add Content using HTML
   64: Using your wireframes and design as references, add content to your index.html (as well as other) pages in your [USERNAME].github.io site using HTML.
   65
   66  You should include links to each social networking site using icons. Make sure to have a header, footer, and navigation bar (as long as they fit into your design).
   ..
   91  ## Additional Resources:
   92  - [An Advanced Guide to HTML and CSS](http://learn.shayhowe.com/)
   93: - Awesome List of links: [Design resources for developers](https://gist.github.com/jenmyers/7354863)
   94  - Great List of tutorials: [10 tutorials for beginning web designers](http://code.tutsplus.com/articles/10-hand-picked-tutorials-for-beginning-web-designers--net-9341)
   95

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/README.md:
    5  We will release it with changes at least by the Friday before week 2 begins. -->
    6
    7: It's time to fetch changes from DevBootcamp's phase-0-unit-1 master repo to get the newly-released curriculum. Make sure you are in the master branch of your phase-0-unit-1 repo. Check where you are in your terminal first. DO NOT try fetching these changes into your [USERNAME].github.io repo. You will mess things up! Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/fetching-changes.md) for fetching changes.
    8
    9  This week's material covers web design, HTML, and CSS. You'll even get to build your own website! This week will be challenging since you are working with two new technologies in combination with git and will probably require more of your time than week 1.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/1-numbers-letters/my_solution.md:
   27  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
   28
   29: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
   30   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/1-numbers-letters/README.md:
   59
   60  ## Release 6: Reflect
   61: Using the [Reflection Guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md), reflect on what you learned. Write your response in the "Reflection" section of your my_solution.md file.
   62

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/10-BONUS-challenges/make-a-homework-cheater/readme.md:
   49  This is a simple piece of driver test code. Driver test code is the most basic test you can write. It simply uses a comparison to evaluate whether the output is what you expected.
   50
   51: ## Release 2: Write [Pseudocode](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/pseudocode.md)
   52  Identify the steps you need, the inputs and outputs, etc.
   53
   54: ## Release 3: Write your [Initial Solution](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/initial-solution.md)
   55
   56: ## Release 4: Then try [refactoring](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/refactoring.md) your solution.
   57  See the link for more information about refactoring.
   58
   ..
   62  - Refer to a person by the last name after the first use of their name
   63
   64: ## Release 5: Use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to write your reflection.
   65
   66  ## Release 6: Publish

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/10-BONUS-challenges/Well-Grounded-Rubyist.md:
   53
   54  ## Release 4: Publish (Optional)
   55: Publish your blog on your [USERNAME].github.io. Make sure to link to it from your index! Then tweet about your awesome blog using **#DBCRubyBasics**. If you are particularly proud of your blog, you may want to tweet it @david_a_black as well! He may even respond!
   56

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/2-methods/my_reflection.md:
    3  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
    4
    5: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
    6   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/2-methods/README.md:
   75
   76  ## Release 5: Reflect
   77: In your [my_reflection.md](my_reflection.md) use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to reflect on your learning. Remember, reflections should be directed toward an audience, but they don't need to be lengthy. A short paragraph will suffice. Try to keep your reflection writing to 10-15 minutes.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/3-flow-control/my_reflection.md:
    3  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
    4
    5: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
    6   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/3-flow-control/README.md:
   27
   28  ## Release 2: Reflect
   29: In your [my_reflection.md](my_reflection.md) use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to reflect on your learning. Remember, reflections should be directed toward an audience, but they don't need to be lengthy. A short paragraph will suffice. Try to keep your reflection writing to 10-15 minutes.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/4-arrays/my_reflection.md:
    3  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
    4
    5: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
    6   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/4-arrays/README.md:
   50
   51  ## Release 3: Reflection
   52: In your [my_reflection.md](my_reflection.md) use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to reflect on your learning. Remember, reflections should be directed toward an audience, but they don't need to be lengthy. A short paragraph will suffice. Try to keep your reflection writing to 10-15 minutes.
   53

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/5-more-methods/my_reflection.md:
    3  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
    4
    5: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
    6   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/5-more-methods/README.md:
   27
   28  ## Release 2: Reflect
   29: In your [my_reflection.md](my_reflection.md) use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to reflect on your learning. Remember, reflections should be directed toward an audience, but they don't need to be lengthy. A short paragraph will suffice. Try to keep your reflection writing to 10-15 minutes.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/7-technical-blog.md:
   10
   11  ## Release 0: New file
   12: In your [USERNAME].github.io/blog directory, copy your blog template html into a new file named `t3-arrays-hashes.html`.
   13
   14  ## Release 1: Research Arrays and Hashes
   ..
   29  Use Twitter to find other people's blog posts.
   30
   31: Read at least two other posts, or read one for each topic. Give the author A.S.K (Actionable, Specific, and Kind) feedback as an [issue](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/review.md) on their repo or a tweet!
   32
   33

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/8-cultural-blog.md:
    9
   10  ## Release 0: Copy your Blog Template
   11: In your [USERNAME].github.io/blog directory, copy your blog tempate into a new HTML file named `c3_thinking-style.html`. (Note: the number corresponds to the week rather than the actual assignment).
   12
   13  ## Release 1: Research
   ..
   33
   34  ## Release 5: Read
   35: Read at least one post another student wrote. Give the author A.S.K (Actionable, Specific, and Kind) feedback as an [issue](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/review.md) on their repo or a tweet!
   36

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/9-gps1-2/README.md:
   64
   65  ## Release 6: Publish
   66: Using the terminal, practice copying the html and css sheets into a new folder in your [USERNAME].github.io site. Commit and push your changes to your github.io site. Double check that everything is displaying properly. Then add a link on the index of your site to make sure people can find it!
   67
   68  ## Release 7: Give Feedback

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/README.md:
    5  We will release it with changes at least by the Friday before the week begins. -->
    6
    7: It's time to fetch changes from DevBootcamp's phase-0-unit-1 master repo to get the newly-released curriculum. Make sure you are in the master branch of your phase-0-unit-1 repo. Check where you are in your terminal first. DO NOT try fetching these changes into your [USERNAME].github.io repo. You will mess things up! Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/fetching-changes.md) for fetching changes.
    8
    9  You'll want to get a copy of Chris Pine's [*Learn to Program, 2nd edition*](http://www.ebooks-it.net/ebook/learn-to-program-2nd-edition) for this week. You will be reading the content and then completing the challenges we assign.
   ..
   36
   37  ## Working through the challenges
   38: Once you have the entire local repository on your computer, you don't need to read the challenges on github anymore (although we admit, it's prettier). You can open the entire repository in Sublime and read the challenges in their original markdown. It will also help you find any link issues, since you can see where they are pointing. If you do find broken links, please let us know by posting on the community. You should also try to figure out a fix -- it will help your markdown skills!
   39
   40  ## Remember your Unit Expectations!

102 matches across 42 files


Searching 178 files for "github" (case sensitive)

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/README.md:
   10
   11  ## Unit Requirements
   12: - [Peer-Pair program](https://github.com/Devbootcamp/phase-0-handbook/blob/master/peer-pairing-sessions.md) at least 4 times this unit. Read about [pairing](https://github.com/Devbootcamp/phase-0-handbook/blob/master/pairing-in-phase-0.md).
   13: - [Submit feedback](https://socrates.devbootcamp.com/feedback/new) for all pairing sessions. (You should submit at least 4 for peer sessions and 2 for [GPS 1.1 and 1.2](https://github.com/Devbootcamp/phase-0-handbook/blob/master/guided-pairing-sessions.md))
   14  - [Rate Feedback](https://socrates.devbootcamp.com/feedback) at least 20 pieces of other people's feedback.
   15

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/10-technical-blog.md:
   29  **Using ONLY your command line**
   30
   31: - Navigate to your [USERNAME].github.io repository
   32  - Make a directory called `blog`
   33  - In the `blog` directory, add a new file called `t1-git-blog.md`
   ..
   35  - Add and commit your changes with a good commit message
   36  - Push your changes
   37: - Navigate to your [USERNAME].github.io/blog/t1-git-blog.md
   38
   39  If you went through every step, you should see the blog template live on your site!
   ..
   56  Next week you will make this post much prettier - but for now it's important that you get the content up there.
   57
   58: Double check you can see your updated content on [USERNAME].github.io/blog/t1-git-blog.md.
   59
   60  ## Release 5: Promote

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/11-cultural-blog.md:
   16  **Using ONLY your command line**
   17
   18: - Navigate to your `[USERNAME].github.io/blog` directory
   19  - Add a new file called `c1-chefs-kitchen.md`
   20  - Copy the markdown template from [blog-template.md](blog-template.md) (in this repository) into your `c1-chefs-kitchen.md` file.
   ..
   33  ## Release 3: Publish
   34
   35: Don't forget to add, commit, and push your changes to make them live on your github.io site. Double-check that you can see your page when you visit:
   36
   37: [USERNAME].github.io/blog/c1-chefs-kitchen.md
   38
   39  ## Release 4: Promote

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/12-self-introduction.md:
   15  ## Release 0: Read someone else's reflections
   16
   17: Log on to [Socrates](https://socrates.devbootcamp.com/) and look at your cohort. Find the person after you in the cohort list. Click on their name. On their profile, you should see their GitHub username. Go to their repository and read their reflections for each challenge. The URL should be https://github.com/[THEIR-USERNAME]/phase-0-unit-1. If it gives you a 404 error, try writing the URL directly. If you still get an error, send them an email and ask how they are doing.
   18
   19  Once you've read them, or while reading through them, consider what you learned by reading another person's reflections. Keep it in mind for your introduction email!
   ..
   29  - What you learned by reading [NAME]'s reflection
   30  - When the best time for you to pair is
   31: - Links to your 1) forked `phase-0-unit-1` repository and your [USERNAME].github.io site
   32
   33  Send your email!
   ..
   39  After you start seeing other student's self introductions, select another person's repository to view (they should have included a link in their email).
   40
   41: Leave feedback for the second person using the "Issues" feature on GitHub. Use the ["How to Create an Issue"](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/review.md) instructions for help.
   42
   43  ## Release 4: Check in with your accountability group

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/2-computer-setup/linux-instructions.md:
   59
   60  ## Release 4: Set up your Path
   61: First you need to clone this github repository into your computer and install the files. Type each line separately:
   62
   63  ```shell
   64: git clone https://github.com/supertopher/dotfiles.git
   65  cd dotfiles
   66  ./install
   ..
   93
   94  ## Release 7: Set up Sublime
   95: Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/text-editor-setup.md) in the Phase 0 Handbook to make Sublime your default text editor.
   96
   97  ## Release 8: Install Node

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/2-computer-setup/mac-instructions.md:
   50
   51  ```shell
   52: ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
   53  ```
   54  It will prompt you for your password - so be ready to type it in.
   55
   56  ## Release 4: Set up your Path
   57: First you need to clone this github repository into your computer and install the files. Type each line separately:
   58
   59  ```shell
   60: git clone https://github.com/supertopher/dotfiles.git
   61  cd dotfiles
   62  ./install
   ..
   80
   81  ## Release 6: Set up Sublime
   82: Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/text-editor-setup.md) in the Phase 0 Handbook to make Sublime your default text editor.
   83
   84  ## Release 7: Install Rbenv

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/2-computer-setup/windows-instructions.md:
   28  ## Release 0: Download Sublime Text
   29
   30: Follow these instructions [sublime install and configure](https://github.com/Devbootcamp/phase-0-handbook/blob/master/text-editor-setup.md)
   31
   32  If you have dont this correctly, you should be able to open files from the command prompt using `subl "filename"` now.
   ..
  108  Now we can configure some of the git settings.
  109
  110: first thing is to set your username and email you have related to your github account
  111
  112  ```shell
  ...
  135
  136  ## Release 7: Set up Sublime
  137: Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/text-editor-setup.md) in the Phase 0 Handbook to make Sublime your default text editor.
  138
  139  ## Release 8: Install Postgresql

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/4-github-intro/README.md:
   29    2. The challenges are numbered in the order needed to complete them in the section where directories and files are displayed (above the README).
   30
   31: Don't overthink the web version of github too much. It's a very similar structure to a computer's file structure you already know.
   32
   33  #### Branches
   ..
   76  Confused about the difference between git and GitHub? Try one of these articles:
   77
   78: - [Git vs. GitHub for Dummies](http://stephaniehoh.github.io/blog/2013/10/07/git-vs-github-for-dummies/)
   79: - [Is Git the same as GitHub?](http://www.jahya.net/blog/?2013-05-git-vs-github)
   80
   81

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/5-fork-clone/fork-clone-steps.md:
    2
    3  ## Username
    4: I'm sure you've chosen an excellent and memorable username for GitHub, so don't forget it! When you see "[USERNAME]" in this guide, replace it with your username. For example, my username is "mbtomori". So "github.com/**[USERNAME]**" becomes "github.com/**mbtomori**".
    5
    6  ## Forking
    .
   32  Now you'll want to bring the repository to our computer. There is a series of commands to do this.
   33
   34: First, open your terminal and check where you are (type `pwd`). You NEVER want to clone a repository into another local github repository, so **always** make sure you are in the correct directory, like your Desktop or a phase-0 folder.
   35
   36  The first step is to get the URL of your FORKED repo (Don't clone Devbootcamp's version of the repo!). This is found here:
   ..
   44  ![terminal-clone](../imgs/terminal-clone.png)
   45
   46: If you are using HTTPS, you will be prompted to enter your github username and password. (You won't be able to see what you type, when you finish entering your username, press enter. You will then be prompted to enter your password -- press enter when you're finished).
   47
   48  Now you should see some stuff execute. It looks like you're hacking a mainframe from the 90s!

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/5-fork-clone/README.md:
   36  ## Release 3: Clone
   37
   38: Now you have your own fork of the curriculum on github.com just waiting to be modified. It's time to bring it to your computer so you can add your work. Clone your **forked** repo using the instructions from the video.
   39
   40: Delete your local copy (using the command line) and clone it again. Get familiar with the commands and the steps to get a file from github to your computer.
   41
   42  Now that you have your own fork and a local copy of the files to work with, you can share your knowledge with the world. Find someone/thing that will listen to you for 10 minutes and teach them how to fork and clone a repo. Wouldn't it be great if your dog could do this for you?
   ..
   45  Now you can finally add your reflection to the challenge itself! Reflect on your learning in this challenge by editing the [my_reflection.md](my_reflection.md) file in the [5-fork-clone](./) folder (the folder you are in). These files are written in [markdown](http://daringfireball.net/projects/markdown/syntax), which is a text-to-HTML conversion tool. It's so easy, you just need to type as you normally would to add your reflections.
   46
   47: You can complete this challenge reflection on github.com. Click on the [my_reflection.md](my_reflection.md) file in this folder. There should be a button to edit (it looks like a pencil) at the top. Click it. You'll see questions from the first challenge as well as this one. Add your reflection in markdown and write a commit message under "Commit changes" to describe the changes you made. Once you type something there, you will want to click the "commit changes" button. **NOTE: It will not let you commit changes without a commit message.**
   48
   49  ![Editing Reflection](../imgs/adding-reflection.jpg)
   50
   51: Once you press "commit changes," your new file should be automatically visible on your www.github.com/[USERNAME]/phase-0-unit-1 directory.
   52
   53  After you learn how to edit files locally and push your changes (in the next challenge), you'll want to read and edit all files on your local `phase-0-unit-1` repository using Sublime--more on that later.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/6-tracking-changes/README.md:
   26  Because commits are 'save points', it is important to start getting in the habit of writing good commit messages so you know what each commit includes. Here is [Tim Pope's style guide](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html) for commits. There's a bunch of advanced git talk here, so just focus on the first part of the post.
   27
   28: You can type your commit messages in your terminal with `git commit -m "message goes here between the quotes"` or you can use the verbose commit message to give yourself some room `git commit -v` will open your default editor according to git (learn how to change it [here](https://help.github.com/articles/associating-text-editors-with-git) follow instructions for sublime). After you write your message, save and close the file. Your commit will be recorded.
   29
   30  You can check the commit history of a repository in the command line by typing `git log` and scroll using the up and down arrows. Exit using `q`. How would you score our git commit messages? Would you know where to look in each message to find what files were changed?

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/7-set-remotes/README.md:
   28
   29  ```shell
   30: origin  https://github.com/[USERNAME]/phase-0-unit-1.git (fetch)
   31: origin  https://github.com/[USERNAME]/phase-0-unit-1.git (push)
   32: upstream  https://github.com/Devbootcamp/phase-0-unit-1.git (fetch)
   33: upstream  https://github.com/Devbootcamp/phase-0-unit-1.git (push)
   34  ```
   35
   ..
   57   -->
   58  ## Reflect
   59: In the [my_reflection.md](my_reflection.md) file, answer the questions. Then go through the process of adding your changes, committing, and pushing. You should see your answers live on github!
   60

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/8-new-repo/README.md:
   10  ## Summary
   11
   12: Up to this point, you have been working with existing repositories. In this challenge, you'll be creating your own repository that will host your very own website! You'll be using a GitHub repository and [GitHub Pages](http://pages.github.com/) to set it up.
   13
   14  ## Releases
   ..
   16  ## Release 0: Create a website repository
   17
   18: 1.**Create a [new repository](https://github.com/new)**<br /><br />This will take you to the new repository form.
   19
   20: ![New repo form](../imgs/github-repo-1.jpg)
   21
   22  2. **Fill out the new repository form.**
   23:  - You *must, must, must* name your repository **[USERNAME].github.io**.Your repository should be *public*.
   24   - Check "Initialize this project with a README" and add an MIT license.
   25
   26:  ![New repo form](../imgs/github-repo-2.jpg)
   27
   28:  I'm gonna say it again: You *must, must, must* name your repository **[USERNAME].github.io**. If you have trouble, double check you spelled it correctly.
   29
   30  3. Click on the **"Create Repository"** button
   ..
   36  **Do a celebration dance!** <br />:dancers: :tada: :dancer:
   37
   38: ![You have a repo](../imgs/github-repo3.jpg)
   39
   40  ## Release 1: Clone the repository
   ..
   66
   67  - **Open a new file in Sublime**
   68: - Save the file as `index.html` in the **[USERNAME].github.io directory**.
   69
   70  ![Sublime save](../imgs/sublime-save.jpg)
   ..
   86  Using your git skills, add the file to the stage, commit your changes, and push it to GitHub.
   87
   88: After your push is done, your remote repo which lives on github.com will be updated.
   89: Go to **http://[USERNAME].github.io** to see your HTML page live!
   90
   91  *NOTE: It can sometimes take up to 15 minutes to update the site after creating your repo, so if you run into a 404 error, be patient and check again later.*
   92
   93: ![GitHub commit](../imgs/github-page1.jpg)
   94
   95  You can also see the new index.html file in your GitHub repository!
   96
   97: ![GitHub commit](../imgs/github-page2.jpg)
   98
   99  #### [AMAZING!](http://www.youtube.com/watch?v=ewfIvKbuRUg)

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/blog-template.md:
    1  <!-- This template is in markdown, not html, so
    2    it will not render beautifully when you copy and
    3:   paste it into your github.io site, but it will at
    4    least be published. Next week you'll be creating a
    5    blog template using HTML and CSS and you'll be able

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/README.md:
    1  # Week 1: Git, GitHub, and the Command Line
    2
    3: **Welcome to Phase 0!** We hope you are excited to further your knowledge and begin integrating into the developer and DBC community. Please make sure you've completed the [Phase 0 prerequisites](https://github.com/Devbootcamp/phase-0-handbook/blob/master/phase-0-prerequisites.md) **before** getting started with the weekly challenges.
    4
    5  Please keep track of how much time you spend on the required sections of Phase 0 challenges. We'll ask you for this information in your weekly submission forms to gauge whether we are giving too much, the right amount, or not enough work each week.
    .
   12  #### 2. [Computer Setup](2-computer-setup)
   13  #### 3. [Think about time](3-think-about-time)
   14: #### 4. [GitHub Intro](4-github-intro)
   15  #### 5. [Forking and Cloning](5-fork-clone)
   16  #### 6. [Tracking Changes](6-tracking-changes)

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/12-BONUS-challenges/intermediate-html-css/README.md:
   21
   22  ## Release 1: Apply
   23: Download these [practice files](http://girldevelopit.github.io/gdi-core-intermediate-html-css/class1.zip). Move the unzipped files into this (4-intermediate-html-css) directory. Do the following exercises using the files in the "practice" folder. Save all files in the practice folder (which should now be in your repository). After you are done, compare your work with the files in the "completed" folder.
   24
   25  - Add reset.css to your index.html file. What happens?

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/12-BONUS-challenges/responsive-design/README.md:
   68
   69  ## Release 4: Commit and push your changes
   70: This site should be initially kept in your phase-0-unit-1 repository, but we also want you to make it live on your github.io site.
   71
   72  ## Release 5: Publish
   73: Using the terminal, practice copying the html and css sheets into a new folder in your [USERNAME].github.io site. Commit and push your changes to your github.io site. Double check that everything is displaying  properly. Then add a link on the index of your site to make sure people can learn from your example!
   74
   75  ## Helpful Resources

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/2-site-planning/README.md:
   33  You'll definitely want to include:
   34
   35:  - Links to your social networks (Twitter, facebook, linked-in, quora, github etc. Basically anything from Socrates except for Tumblr, unless you have a tumblr blog you want to add as well)
   36    - Your picture
   37    - Your contact information

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/3-wireframing/README.md:
   37  ## Release 3: Wireframe your site's index
   38
   39: Now consider how you want the index of your webpage to look. The index is the landing page of your [USERNAME].github.io site, so you'll want it be well thought-out.
   40
   41  You should have a header,footer, and navigation bar on your site.
   ..
   43  You will be using this site to promote yourself when you finish Dev Bootcamp, so make sure it has a spot for the following:
   44
   45:   - Links to your social networks (Twitter, facebook, linked-in, quora, github etc. Basically anything from Socrates except for Tumblr, unless you have a tumblr blog you want to add)
   46    - Your picture
   47    - Your contact information

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/4-beginning-html/README.md:
   45
   46  ## Release 4: Publish
   47: Commit your changes for each file in this challenge, and push your changes to github.
   48
   49  ## Additional Resources:

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/6-blog-template/README.md:
   17  ## Release 0: Wireframe to HTML
   18
   19: In the blog directory on your [USERNAME].github.io site, create a new file called "blog-template.html."
   20
   21  With your partner, compare the two wireframes you made in [3-wireframing](../3-wireframing) challenge. Decide which one you want to use as a reference, or decide to combine the best parts into one.
   ..
   27  ## Release 1: Apply CSS
   28
   29: In the main directory for your [USERNAME].github.io site, create a "stylesheets" directory. In that directory, create a "blog-stylesheet.css" Link to that stylesheet in your blog-template.html.
   30
   31  Use CSS to position and format the content of your blog. Once you have it displayed as you want it, move on to the next release.
   ..
   53  Now that you've made your template, you're ready to use it in the blog assignments. Add your changes to the stage, commit, and push them.
   54
   55: Now go to [USERNAME].github.io/blog/t1-git-blog.html and [USERNAME].github.io/blog/c1-chefs-kitchen.html. Are your files displaying as you expected them to? If not, can you find out what the issue is?
   56
   57  ## Release 5: Reflect

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/7-chrome-devtools/README.md:
   47  ## Release 3: Reflect
   48
   49: Go to your [Reflection file](my_reflection.md) to write your reflection - include answers to the questions in the file in addition to the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md).
   50
   51  ## Release 4: Commit and Push

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/8-your-website-solo-challenge/README.md:
    3  # U1.W2: Your Website (Solo Challenge)
    4
    5: **THIS IS YOUR SOLO CHALLENGE FOR WEEK 2.** Please reference the [Phase 0 Handbook](https://github.com/Devbootcamp/phase-0-handbook/) for more details as to what this entails.
    6
    7  ## Learning Competencies
    .
   13  ## Summary
   14
   15: In this challenge, you will make your [USERNAME].github.io site using the principles of design, site map, wireframe, and HTML and CSS you've learned this far. You may not use Bootstrap or any other design framework for your site.
   16
   17  Get creative. Have fun. But be conscious of time. This site will be a work in progress, so you should timebox how much time you want to spend on each part. You will be able to make improvements each week or unit if you dedicate the time to it. Make an MVP (Minimum Viable Product) for this version. Designing and building a site can take a **LONG TIME**, so just get your site "good enough" for your MVP. You can always make it better later!
   ..
   27  This page is required for you to create:
   28
   29: blog/index.html (Note: this is different than the index.html already in your [USERNAME].github.io/index.html). This is where the links to blog posts will live.
   30
   31  You do not have to create them during this challenge, but you should decide what will be in your MVP (Minimum Viable Product) and what you want to add in the future. This will change, but it's a good idea to have an end goal as well.
   ..
   62
   63  #### Add Content using HTML
   64: Using your wireframes and design as references, add content to your index.html (as well as other) pages in your [USERNAME].github.io site using HTML.
   65
   66  You should include links to each social networking site using icons. Make sure to have a header, footer, and navigation bar (as long as they fit into your design).
   ..
   91  ## Additional Resources:
   92  - [An Advanced Guide to HTML and CSS](http://learn.shayhowe.com/)
   93: - Awesome List of links: [Design resources for developers](https://gist.github.com/jenmyers/7354863)
   94  - Great List of tutorials: [10 tutorials for beginning web designers](http://code.tutsplus.com/articles/10-hand-picked-tutorials-for-beginning-web-designers--net-9341)
   95

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/README.md:
    5  We will release it with changes at least by the Friday before week 2 begins. -->
    6
    7: It's time to fetch changes from DevBootcamp's phase-0-unit-1 master repo to get the newly-released curriculum. Make sure you are in the master branch of your phase-0-unit-1 repo. Check where you are in your terminal first. DO NOT try fetching these changes into your [USERNAME].github.io repo. You will mess things up! Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/fetching-changes.md) for fetching changes.
    8
    9  This week's material covers web design, HTML, and CSS. You'll even get to build your own website! This week will be challenging since you are working with two new technologies in combination with git and will probably require more of your time than week 1.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/1-numbers-letters/my_solution.md:
   27  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
   28
   29: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
   30   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/1-numbers-letters/README.md:
   59
   60  ## Release 6: Reflect
   61: Using the [Reflection Guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md), reflect on what you learned. Write your response in the "Reflection" section of your my_solution.md file.
   62

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/10-BONUS-challenges/make-a-homework-cheater/readme.md:
   49  This is a simple piece of driver test code. Driver test code is the most basic test you can write. It simply uses a comparison to evaluate whether the output is what you expected.
   50
   51: ## Release 2: Write [Pseudocode](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/pseudocode.md)
   52  Identify the steps you need, the inputs and outputs, etc.
   53
   54: ## Release 3: Write your [Initial Solution](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/initial-solution.md)
   55
   56: ## Release 4: Then try [refactoring](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/refactoring.md) your solution.
   57  See the link for more information about refactoring.
   58
   ..
   62  - Refer to a person by the last name after the first use of their name
   63
   64: ## Release 5: Use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to write your reflection.
   65
   66  ## Release 6: Publish

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/10-BONUS-challenges/Well-Grounded-Rubyist.md:
   53
   54  ## Release 4: Publish (Optional)
   55: Publish your blog on your [USERNAME].github.io. Make sure to link to it from your index! Then tweet about your awesome blog using **#DBCRubyBasics**. If you are particularly proud of your blog, you may want to tweet it @david_a_black as well! He may even respond!
   56

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/2-methods/my_reflection.md:
    3  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
    4
    5: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
    6   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/2-methods/README.md:
   75
   76  ## Release 5: Reflect
   77: In your [my_reflection.md](my_reflection.md) use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to reflect on your learning. Remember, reflections should be directed toward an audience, but they don't need to be lengthy. A short paragraph will suffice. Try to keep your reflection writing to 10-15 minutes.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/3-flow-control/my_reflection.md:
    3  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
    4
    5: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
    6   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/3-flow-control/README.md:
   27
   28  ## Release 2: Reflect
   29: In your [my_reflection.md](my_reflection.md) use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to reflect on your learning. Remember, reflections should be directed toward an audience, but they don't need to be lengthy. A short paragraph will suffice. Try to keep your reflection writing to 10-15 minutes.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/4-arrays/my_reflection.md:
    3  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
    4
    5: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
    6   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/4-arrays/README.md:
   50
   51  ## Release 3: Reflection
   52: In your [my_reflection.md](my_reflection.md) use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to reflect on your learning. Remember, reflections should be directed toward an audience, but they don't need to be lengthy. A short paragraph will suffice. Try to keep your reflection writing to 10-15 minutes.
   53

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/5-more-methods/my_reflection.md:
    3  <!-- Write your reflection here. Use the Reflection Guidelines for help framing your reflection.
    4
    5: https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md
    6   -->

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/5-more-methods/README.md:
   27
   28  ## Release 2: Reflect
   29: In your [my_reflection.md](my_reflection.md) use the [reflection guidelines](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/reflection-guidelines.md) to reflect on your learning. Remember, reflections should be directed toward an audience, but they don't need to be lengthy. A short paragraph will suffice. Try to keep your reflection writing to 10-15 minutes.

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/7-technical-blog.md:
   10
   11  ## Release 0: New file
   12: In your [USERNAME].github.io/blog directory, copy your blog template html into a new file named `t3-arrays-hashes.html`.
   13
   14  ## Release 1: Research Arrays and Hashes
   ..
   29  Use Twitter to find other people's blog posts.
   30
   31: Read at least two other posts, or read one for each topic. Give the author A.S.K (Actionable, Specific, and Kind) feedback as an [issue](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/review.md) on their repo or a tweet!
   32
   33

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/8-cultural-blog.md:
    9
   10  ## Release 0: Copy your Blog Template
   11: In your [USERNAME].github.io/blog directory, copy your blog tempate into a new HTML file named `c3_thinking-style.html`. (Note: the number corresponds to the week rather than the actual assignment).
   12
   13  ## Release 1: Research
   ..
   33
   34  ## Release 5: Read
   35: Read at least one post another student wrote. Give the author A.S.K (Actionable, Specific, and Kind) feedback as an [issue](https://github.com/Devbootcamp/phase-0-handbook/blob/master/coding-references/review.md) on their repo or a tweet!
   36

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/9-gps1-2/README.md:
   64
   65  ## Release 6: Publish
   66: Using the terminal, practice copying the html and css sheets into a new folder in your [USERNAME].github.io site. Commit and push your changes to your github.io site. Double check that everything is displaying properly. Then add a link on the index of your site to make sure people can find it!
   67
   68  ## Release 7: Give Feedback

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/README.md:
    5  We will release it with changes at least by the Friday before the week begins. -->
    6
    7: It's time to fetch changes from DevBootcamp's phase-0-unit-1 master repo to get the newly-released curriculum. Make sure you are in the master branch of your phase-0-unit-1 repo. Check where you are in your terminal first. DO NOT try fetching these changes into your [USERNAME].github.io repo. You will mess things up! Follow [these instructions](https://github.com/Devbootcamp/phase-0-handbook/blob/master/fetching-changes.md) for fetching changes.
    8
    9  You'll want to get a copy of Chris Pine's [*Learn to Program, 2nd edition*](http://www.ebooks-it.net/ebook/learn-to-program-2nd-edition) for this week. You will be reading the content and then completing the challenges we assign.
   ..
   36
   37  ## Working through the challenges
   38: Once you have the entire local repository on your computer, you don't need to read the challenges on github anymore (although we admit, it's prettier). You can open the entire repository in Sublime and read the challenges in their original markdown. It will also help you find any link issues, since you can see where they are pointing. If you do find broken links, please let us know by posting on the community. You should also try to figure out a fix -- it will help your markdown skills!
   39
   40  ## Remember your Unit Expectations!

99 matches across 40 files


Searching 178 files for " github " (case sensitive)

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/2-computer-setup/linux-instructions.md:
   59
   60  ## Release 4: Set up your Path
   61: First you need to clone this github repository into your computer and install the files. Type each line separately:
   62
   63  ```shell

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/2-computer-setup/mac-instructions.md:
   55
   56  ## Release 4: Set up your Path
   57: First you need to clone this github repository into your computer and install the files. Type each line separately:
   58
   59  ```shell

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/2-computer-setup/windows-instructions.md:
  108  Now we can configure some of the git settings.
  109
  110: first thing is to set your username and email you have related to your github account
  111
  112  ```shell

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/4-github-intro/README.md:
   29    2. The challenges are numbered in the order needed to complete them in the section where directories and files are displayed (above the README).
   30
   31: Don't overthink the web version of github too much. It's a very similar structure to a computer's file structure you already know.
   32
   33  #### Branches

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/5-fork-clone/fork-clone-steps.md:
   32  Now you'll want to bring the repository to our computer. There is a series of commands to do this.
   33
   34: First, open your terminal and check where you are (type `pwd`). You NEVER want to clone a repository into another local github repository, so **always** make sure you are in the correct directory, like your Desktop or a phase-0 folder.
   35
   36  The first step is to get the URL of your FORKED repo (Don't clone Devbootcamp's version of the repo!). This is found here:
   ..
   44  ![terminal-clone](../imgs/terminal-clone.png)
   45
   46: If you are using HTTPS, you will be prompted to enter your github username and password. (You won't be able to see what you type, when you finish entering your username, press enter. You will then be prompted to enter your password -- press enter when you're finished).
   47
   48  Now you should see some stuff execute. It looks like you're hacking a mainframe from the 90s!

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-1/5-fork-clone/README.md:
   38  Now you have your own fork of the curriculum on github.com just waiting to be modified. It's time to bring it to your computer so you can add your work. Clone your **forked** repo using the instructions from the video.
   39
   40: Delete your local copy (using the command line) and clone it again. Get familiar with the commands and the steps to get a file from github to your computer.
   41
   42  Now that you have your own fork and a local copy of the files to work with, you can share your knowledge with the world. Find someone/thing that will listen to you for 10 minutes and teach them how to fork and clone a repo. Wouldn't it be great if your dog could do this for you?

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/2-site-planning/README.md:
   33  You'll definitely want to include:
   34
   35:  - Links to your social networks (Twitter, facebook, linked-in, quora, github etc. Basically anything from Socrates except for Tumblr, unless you have a tumblr blog you want to add as well)
   36    - Your picture
   37    - Your contact information

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-2/3-wireframing/README.md:
   43  You will be using this site to promote yourself when you finish Dev Bootcamp, so make sure it has a spot for the following:
   44
   45:   - Links to your social networks (Twitter, facebook, linked-in, quora, github etc. Basically anything from Socrates except for Tumblr, unless you have a tumblr blog you want to add)
   46    - Your picture
   47    - Your contact information

/Users/Maria/Desktop/p0 Curriculum/phase-0-unit-1/week-3/README.md:
   36
   37  ## Working through the challenges
   38: Once you have the entire local repository on your computer, you don't need to read the challenges on github anymore (although we admit, it's prettier). You can open the entire repository in Sublime and read the challenges in their original markdown. It will also help you find any link issues, since you can see where they are pointing. If you do find broken links, please let us know by posting on the community. You should also try to figure out a fix -- it will help your markdown skills!
   39
   40  ## Remember your Unit Expectations!

10 matches across 9 files
